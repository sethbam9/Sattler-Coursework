""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""" # Day 1 Challenge, p. 89 """
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
# Make a simple knowledge base. Represent some of your favorite books
# and authors.
author_of(tolkien, 'Lord of the Rings').
author_of(tolkien, 'The Hobbit').
author_of(tolkien, 'The Silmarillion').
author_of(tolkien, 'The Children of Hurin').
author_of(twain, 'Huckleberry Finn').
author_of(chan, 'Crazy Love').

# Find all books in your knowledge base written by one author.
# authored(tolkien, Book).
authored(X, Y) :- author_of(X, Y).

# Make a knowledge base representing musicians and instruments. Also
# represent musicians and their genre of music.
plays(john, guitar).
plays(jill, violin).
plays(ahmed, guitar).
plays(chad, drums).
plays(ron, bass).

genre(john, folk).
genre(jill, classical).
genre(ahmed, indie).
genre(chad, regge).
genre(ron, rock).

# Find all musicians who play the guitar.
# plays_instrument(Musician, guitar).
plays_instrument(X, Y) :- plays(X, Y).


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""" # Day 2 Challenge, p. 100 """
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
# Reverse the elements of a list.

# Find the smallest element of a list.

# Sort the elements of a list.


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""" # Day 3 Challenge, p. 31 """
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
# Modify the Sudoku solver to work on six-by-six puzzles (squares are
# 3x2) and 9x9 puzzles.

# Make the Sudoku solver print prettier solutions.

# Bonus
# Solve the Eight Queens problem by taking a list of queens. Rather than
# a tuple, represent each queen with an integer, from 1â€“8. Get the row of
# a queen by its position in the list and the column by the value in the
# list.



# **********************************************************************
# Notes
# **********************************************************************
likes(wallace, cheese).
likes(grommit, cheese).
likes(wendolene, sheep).
friend(X, Y) :- \+(X = Y), likes(X, Z), likes(Y, Z).
